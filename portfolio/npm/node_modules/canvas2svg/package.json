{
  "_args": [
    [
      {
        "raw": "canvas2svg@git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
        "scope": null,
        "escapedName": "canvas2svg",
        "name": "canvas2svg",
        "rawSpec": "git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
        "spec": "git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:bokeh/canvas2svg.git#v1.0.21",
          "sshUrl": "git+ssh://git@github.com/bokeh/canvas2svg.git#v1.0.21",
          "httpsUrl": "git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
          "gitUrl": "git://github.com/bokeh/canvas2svg.git#v1.0.21",
          "shortcut": "github:bokeh/canvas2svg#v1.0.21",
          "directUrl": "https://raw.githubusercontent.com/bokeh/canvas2svg/v1.0.21/package.json"
        }
      },
      "/home/yohoos/Desktop/DjangoProjs/portfolio/npm/node_modules/bokehjs"
    ]
  ],
  "_from": "git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
  "_id": "canvas2svg@1.0.21",
  "_inCache": true,
  "_location": "/canvas2svg",
  "_phantomChildren": {},
  "_requested": {
    "raw": "canvas2svg@git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
    "scope": null,
    "escapedName": "canvas2svg",
    "name": "canvas2svg",
    "rawSpec": "git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
    "spec": "git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:bokeh/canvas2svg.git#v1.0.21",
      "sshUrl": "git+ssh://git@github.com/bokeh/canvas2svg.git#v1.0.21",
      "httpsUrl": "git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
      "gitUrl": "git://github.com/bokeh/canvas2svg.git#v1.0.21",
      "shortcut": "github:bokeh/canvas2svg#v1.0.21",
      "directUrl": "https://raw.githubusercontent.com/bokeh/canvas2svg/v1.0.21/package.json"
    }
  },
  "_requiredBy": [
    "/bokehjs"
  ],
  "_resolved": "git+https://github.com/bokeh/canvas2svg.git#6c526739ab8b07fa335f51d5a78e15e021c2fe1b",
  "_shasum": "f07a2b13bf2ba723bc409fffd62c0ab9a7b968e7",
  "_shrinkwrap": null,
  "_spec": "canvas2svg@git+https://github.com/bokeh/canvas2svg.git#v1.0.21",
  "_where": "/home/yohoos/Desktop/DjangoProjs/portfolio/npm/node_modules/bokehjs",
  "author": {
    "name": "Kerry Liu"
  },
  "dependencies": {},
  "description": "canvas2svg",
  "devDependencies": {
    "chai": "^2.1.1",
    "cheerio": "^0.19.0",
    "gulp": "^3.9.0",
    "gulp-bump": "^0.3.1",
    "karma": "^0.12.36",
    "karma-chai": "^0.1.0",
    "karma-chrome-launcher": "^0.1.12",
    "karma-firefox-launcher": "^0.1.6",
    "karma-mocha": "^0.1.10",
    "karma-mocha-reporter": "^1.0.2",
    "mocha": "^2.2.5",
    "resemblejs": "^1.2.1"
  },
  "directories": {
    "test": "test"
  },
  "gitHead": "6c526739ab8b07fa335f51d5a78e15e021c2fe1b",
  "homepage": "http://gliffy.github.io/canvas2svg/",
  "keywords": [
    "canvas",
    "svg",
    "canvas2svg"
  ],
  "license": "MIT",
  "main": "canvas2svg.js",
  "name": "canvas2svg",
  "optionalDependencies": {},
  "readme": "Canvas2Svg [![Build Status](https://travis-ci.org/gliffy/canvas2svg.svg?branch=master)](https://travis-ci.org/gliffy/canvas2svg)\n==========\nThis library turns your Canvas into SVG using javascript. In other words, this library lets you build an SVG document\nusing the canvas api. Why use it?\n* You have a canvas drawing you want to persist as an SVG file.\n* You like exporting things.\n* Because you didn't want to transform your custom file format to SVG.\n\nDemo\n==========\nhttp://gliffy.github.io/canvas2svg/\n\nHow it works\n==========\nWe create a mock 2d canvas context. Use the canvas context like you would on a normal canvas. As you call methods, we\nbuild up a scene graph in SVG. Yay!\n\nUsage\n==========\n```javascript\n//Create a new mock canvas context. Pass in your desired width and height for your svg document.\nvar ctx = new C2S(500,500);\n\n//draw your canvas like you would normally\nctx.fillStyle=\"red\";\nctx.fillRect(100,100,100,100);\n//etc...\n\n//serialize your SVG\nvar mySerializedSVG = ctx.getSerializedSvg(); //true here, if you need to convert named to numbered entities.\n\n//If you really need to you can access the shadow inline SVG created by calling:\nvar svg = ctx.getSvg();\n```\n\nTests\n==========\nTo run tests:\n```\nnpm install\nnpm test\n```\n\nTo run tests against Chrome and Firefox, call karma directly. This is not the default npm test due to the limited\nbrowser selection in travis.\n```\nnpm install karma-cli -g\nkarma start\n```\n\nDebug\n=========\nPlay with canvas2svg in the provided test/playground.html or run test locally in your browser in test/testrunner.html\n\n\nAdd An Example Case\n=========\nAdd a test file to the test/example folder. In your file make sure to add the drawing function to the global `C2S_EXAMPLES`,\nwith your filename as a key. For example `test\\example\\linewidth.js` should look something like:\n```javascript\nwindow.C2S_EXAMPLES['linewidth'] = function(ctx) {\n    for (var i = 0; i < 10; i++){\n        ctx.lineWidth = 1+i;\n        ctx.beginPath();\n        ctx.moveTo(5+i*14,5);\n        ctx.lineTo(5+i*14,140);\n        ctx.stroke();\n    }\n};\n```\ninstall gulp globally if you haven't done so already\n```\nnpm install -g gulp\n```\nThen run the following to update playground.html and testrunner.html\n```\ngulp\n```\nYou should now be able to select your new example from playground.html or see it run in testrunner.html\n\nIf you find a bug, or want to add functionality, please add a new test case and include it with your pull request.\n\nUsing with node.js\n==================\n\nYou can use `canvas2svg` with node.js using [jsdom](https://github.com/tmpvar/jsdom) with [node-canvas](https://github.com/Automattic/node-canvas). To do this first create a new document object, and then create a new instance of `C2S` based on that document:\n\n```javascript\nvar canvas = require('canvas'),\n    jsdom = require('jsdom'),\n    C2S = require('canvas2svg');\n\nvar document = jsdom.jsdom();\nvar ctx = new C2S({document: document});\n\n// ... drawing code goes here ...\n```\n\nN.B. You may not need node-canvas for some simple operations when using jsdom >= 6.3.0, but it's still recommended that you install it.\n\nUpdates\n==========\n- v1.0.21 Fix issue ctx.drawImage incorrectly smoothing the image and allow user to pass in ctx argument\n- v1.0.20 Fix issue with mixing transforms with path commands\n- v1.0.19 Fix __parseFont to not crash\n- v1.0.18 clip was not working, the path never made it to the clip area\n- v1.0.17 Fix bug with drawing in an empty context. Fix image translation problem. Fix globalAlpha issue.\n- v1.0.16 Add npm publishing support, bower file and optimize for arcs with no angles.\n- v1.0.15 Setup travis, add testharness and debug playground, and fix regression for __createElement refactor\n- v1.0.14 bugfix for gradients, move __createElement to scoped createElement function, so all classes have access.\n- v1.0.13 set paint order before stroke and fill to make them behavior like canvas\n- v1.0.12 Implementation of ctx.prototype.arcTo.\n- v1.0.11 call lineTo instead moveTo in ctx.arc, fixes closePath issue and straight line issue\n- v1.0.10 when lineTo called, use M instead of L unless subpath exists\n- v1.0.9 use currentDefaultPath instead of <path>'s d attribute, fixes stroke's different behavior in SVG and canvas.\n- v1.0.8 reusing __createElement and adding a properties undefined check\n- v1.0.7 fixes for multiple transforms and fills and better text support from stafyniaksacha\n- v1.0.6 basic support for text baseline (contribution from KoKuToru)\n- v1.0.5 fixes for #5 and #6 (with contributions from KoKuToru)\n- v1.0.4 generate ids that start with a letter\n- v1.0.3 fixed #4 where largeArcFlag was set incorrectly in some cases\n- v1.0.2 Split up rgba values set in fill/stroke to allow illustrator import support.\n- v1.0.1 Allow C2S to be called as a function. https://github.com/gliffy/canvas2svg/issues/2\n- v1.0.0 Initial release\n\nMisc\n==========\nSome canvas 2d context methods are not implemented yet. Watch out for setTransform and arcTo.\n\nReleasing\n=========\n\nTo release a new version:\n\n* Run `gulp bump` to update the version number\n* Add a new entry to the [Updates](#Updates) table\n* `git commit -am v1.0.xx`\n* `git push`\n* `npm publish`\n\nLicense\n==========\nThis library is licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "karma start --browsers Firefox --single-run"
  },
  "version": "1.0.21"
}
